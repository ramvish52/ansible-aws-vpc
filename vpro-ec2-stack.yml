---
- name: Setup vprofile Bastion Host
  hosts: localhost
  connection: local
  gather_facts: no 
  tasks:
    - name: Import Bastion Host setup variables
      include_vars: vars/vprostacksetup

    - name: Import Bastion Host setup variables
      include_vars: vars/output_vars

    - name: create a new ec2 key pair, returns generated private key
      ec2_key:
        name: vprokey
        region: "{{region}}"
      register: vprokey_out

    - name: store login key
      copy:
        content: "{{ vprokey_out.key.private_key }}"
        dest: ./loginkey_vpro.pem
        mode: 0400
      when: vprokey_out.changed

    - name: Create Security group for Load balancer
      ec2_group:
        name: vproELB-sg
        description: Allow port 80 anywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"   
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security group for vprofile stack
      ec2_group:
        name: vprostack-sg
        description: Allow port 80 anywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no    
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{vproELBSG_out.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{BastionGid}}"
      register: vproStackSG_out

    - name: Create Security group for vprofile stack
      ec2_group:
        name: vprostack-sg
        description: Allow port 80 anywhere and all port within sg
        region: "{{region}}"
        vpc_id: "{{vpcid}}"
        purge_rules: no    
        rules:
          - proto: all
            group_id: "{{vproStackSG_out.group_id}}"

    - name: creating Nginx Web01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: web01_out 

    - name: creating Tomcat App01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "app01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: app01_out

    - name: creating Memcache mc01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "mc01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: mc01_out

    - name: creating RabbitMq rmq01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "rmq01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: rmq01_out

    - name: creating MySql db01
      ec2:
        key_name: vprokey
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: Vprofile
          Owner: Devops Team
        group_id: "{{vproStackSG_out.group_id}}"
        vpc_subnet_id: "{{privsub1id}}"
      register: db01_out

    - debug:
        var: db01_out.tagged_instances[0].id

    - local_action:
        module: ec2_elb_lb
        name: "vprofile-elb"
        region: "{{region}}"
        state: present
        instance_ids: 
          - "{{web01_out.tagged_instances[0].id}}"
        purge_instance_ids: true
        security_group_ids: "{{vproELBSG_out.group_id}}"
        subnets:
          - "{{pubsub1id}}"
          - "{{pubsub2id}}"
          - "{{pubsub3id}}"
        listeners:
          - protocol: http
            load_balancer_port: 80
            instance_port: 80

    - name: Insert/update Hosts IP and Name
      blockinfile:
        path: provision-stack/group_vars/hostip
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_ip}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}

    - name: Copy login key to provision_stack direcotry
      copy:
        src: loginkey_vpro.pem
        dest: provision-stack/loginkey_vpro.pem
        mode: 0400

    - name: Insert/update Hosts IP and Name
      blockinfile:
        path: provision-stack/inventory-vpro
        block: |
          web01_ip: {{web01_out.tagged_instances[0].private_ip}}
          app01_ip: {{app01_out.tagged_instances[0].private_ip}}
          rmq01_ip: {{rmq01_out.tagged_instances[0].private_ip}}
          mc01_ip: {{mc01_out.tagged_instances[0].private_ip}}
          db01_ip: {{db01_out.tagged_instances[0].private_ip}}

          [websrvgrp]
          web01

          [appsrvgrp]
          app01

          [rmqsrvgrp]
          rmq01

          [mcsrvgrp]
          mc01

          [dbsrvgrp]
          db01

          [control]
          cntl

          [stack_inst:children]
          websrvgrp
          appsrvgrp
          rmqsrvgrp
          mcsrvgrp
          dbsrvgrp

          [stack_inst_vars]
          ansible_user=ubuntu
          ansible_ssh_private_key=login_vpro.pem
          #ansible_python_interpreter=/usr/bin/python3
